{"version":3,"file":"static/js/15.0e96da74.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactList/ContactList.styled.js","components/Contact/Contact.styled.js","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","pages/Contacts.jsx","pages/Page.styled.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.users;\n// console.log(selectContacts);\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter.select;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (users, select) => {\n    if (select !== null) {\n      return users.filter(user => user.name.toLowerCase().includes(select));\n    }\n    return users;\n  }\n);\n","import styled from 'styled-components';\n\nexport const Wrap = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding: 0;\n  margin: 0;\n  .icon-sad {\n    width: 60px;\n    height: 60px;\n    fill: #673ab7;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ContactWrap = styled.li`\n  display: flex;\n  justify-content: flex-start;\n  align-items: flex-end;\n  min-width: 420px;\n  gap: 8px;\n`;\nexport const ContactName = styled.p`\n  width: 250px;\n  height: 30px;\n  font-size: 16px;\n  font-weight: 700;\n  border-radius: 4px;\n  outline: none;\n  border: 1px solid #7e57c2;\n  color: #673ab7;\n  padding: 0 8px;\n  margin: 0;\n`;\nexport const ContactNumber = styled.p`\n  width: 150px;\n  height: 30px;\n  font-size: 16px;\n  font-weight: 700;\n  border-radius: 4px;\n  outline: none;\n  color: #673ab7;\n  border: 1px solid #7e57c2;\n  padding: 0 8px;\n  margin: 0;\n`;\nexport const BtnDelete = styled.button`\n  display: inline-block;\n  background-color: #ede7f6;\n  width: 30px;\n  height: 30px;\n  color: white;\n  outline: none;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  margin: 0;\n  .icon-delete {\n    width: 30px;\n    height: 30px;\n    fill: #673ab7;\n    &:hover,\n    :focus {\n      fill: #7c4dff;\n    }\n  }\n`;\n","import React from 'react';\nimport { RiUserUnfollowFill } from 'react-icons/ri';\nimport {\n  BtnDelete,\n  ContactName,\n  ContactNumber,\n  ContactWrap,\n} from './Contact.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { nanoid } from '@reduxjs/toolkit';\n\nexport default function Contact({ contact }) {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(contact.id));\n  return (\n    <ContactWrap id={contact.id} key={nanoid()}>\n      <ContactName>{contact.name}</ContactName>\n      <ContactNumber>{contact.number}</ContactNumber>\n      <BtnDelete type=\"button\" onClick={handleDelete}>\n        <RiUserUnfollowFill className=\"icon-delete\" />\n      </BtnDelete>\n    </ContactWrap>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { Wrap } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Contact from 'components/Contact/Contact';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectError,\n  selectIsLoading,\n  selectVisibleContacts,\n} from 'redux/contacts/selectors';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { TfiFaceSad } from 'react-icons/tfi';\nimport Loading from 'components/Loader/Loading';\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const arrContacts = useSelector(selectVisibleContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  const showArr = Array.isArray(arrContacts) && arrContacts.length !== 0;\n\n  return (\n    <Wrap>\n      {isLoading && <Loading />}\n      {error && <p>{error}</p>}\n      {showArr ? (\n        arrContacts.map(contact => {\n          return <Contact contact={contact} key={nanoid()} />;\n        })\n      ) : (\n        <TfiFaceSad className=\"icon-sad\" />\n      )}\n    </Wrap>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: flex-start;\n  align-items: flex-end;\n  gap: 8px;\n  min-width: 420px;\n  margin-top: 80px;\n  padding: 8px;\n`;\nexport const MarkField = styled.label`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 4px;\n  font-size: 12px;\n  font-weight: 500;\n  color: #7e57c2;\n  padding: 0;\n  margin: 0;\n`;\nexport const ContactName = styled.input`\n  width: 250px;\n  height: 30px;\n  font-size: 16px;\n  font-weight: 700;\n  border-radius: 4px;\n  outline: none;\n  border: 1px solid #7e57c2;\n  color: #673ab7;\n  padding: 0 8px;\n  &:hover,\n  :focus {\n    background-color: #b39ddb;\n    border: 1px solid #b39ddb;\n  }\n`;\nexport const ContactNumber = styled.input`\n  width: 150px;\n  height: 30px;\n  font-size: 16px;\n  font-weight: 700;\n  border-radius: 4px;\n  outline: none;\n  color: #673ab7;\n  border: 1px solid #7e57c2;\n  padding: 0 8px;\n  cursor: pointer;\n  &:hover,\n  :focus {\n    background-color: #b39ddb;\n    border: 1px solid #b39ddb;\n  }\n`;\nexport const BtnAdd = styled.button`\n  display: inline-block;\n  background-color: #ede7f6;\n  width: 30px;\n  height: 30px;\n  color: white;\n  outline: none;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  margin: 0;\n  .icon-add {\n    width: 30px;\n    height: 30px;\n    fill: #673ab7;\n    &:hover,\n    :focus {\n      fill: #7c4dff;\n    }\n  }\n`;\n","import {\n  Form,\n  ContactName,\n  ContactNumber,\n  BtnAdd,\n  MarkField,\n} from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { RiUserAddFill } from 'react-icons/ri';\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.users);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const newUser = {\n      name: event.target.elements.name.value,\n      number: event.target.elements.number.value,\n    };\n    console.log(newUser);\n    const hasContact = contacts.some(\n      contact => contact.name === event.target.elements.name.value\n    );\n    if (hasContact) {\n      alert(`${hasContact} is already in contacts`);\n      event.target.reset();\n      return;\n    }\n    dispatch(addContact(newUser));\n    event.target.reset();\n    // console.log(newUser);\n  };\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <MarkField>\n          Name\n          <ContactName type=\"text\" name=\"name\" required />\n        </MarkField>\n        <MarkField>\n          Number\n          <ContactNumber type=\"tel\" name=\"number\" required />\n        </MarkField>\n        <BtnAdd type=\"submit\">\n          <RiUserAddFill className=\"icon-add\" />\n        </BtnAdd>\n      </Form>\n    </>\n  );\n}\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport ContactList from 'components/ContactList/ContactList';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport { TitleContactsPage, WrapContactsPage } from './Page.styled';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <WrapContactsPage>\n      <Helmet>\n        <TitleContactsPage>Your contactss</TitleContactsPage>\n      </Helmet>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n    </WrapContactsPage>\n  );\n}\n","import styled from 'styled-components';\n\nexport const WrapHomePage = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  width: 600px;\n`;\nexport const TitleHomePage = styled.h2`\n  font-size: 20px;\n`;\n\nexport const WrapRegisterPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n  background-color: #e1f5fe;\n  align-items: center;\n  gap: 20px;\n  margin: 0;\n`;\nexport const TitleRegisterPage = styled.h2`\n  display: block;\n  margin-top: 50px;\n  margin-bottom: 10px;\n  font-size: 24px;\n  padding: 0;\n  margin-top: 100px;\n  color: #01579b;\n`;\nexport const WrapLoginPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n  background-color: #ccff90;\n  align-items: center;\n  gap: 20px;\n  margin: 0;\n`;\nexport const TitleLoginPage = styled.h2`\n  display: block;\n  margin-top: 50px;\n  margin-bottom: 10px;\n  font-size: 24px;\n  padding: 0;\n  margin-top: 100px;\n  color: #388e3c;\n`;\n\nexport const WrapContactsPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n  background-color: #ede7f6;\n  align-items: center;\n  gap: 20px;\n  margin: 0;\n`;\nexport const TitleContactsPage = styled.h2`\n  display: block;\n  margin-top: 50px;\n  margin-bottom: 10px;\n  font-size: 24px;\n  padding: 0;\n  margin-top: 100px;\n  color: #388e3c;\n`;\n"],"names":["selectIsLoading","state","contacts","isLoading","selectError","error","selectVisibleContacts","createSelector","users","filter","select","user","name","toLowerCase","includes","Wrap","styled","_templateObject","_taggedTemplateLiteral","ContactWrap","ContactName","_templateObject2","ContactNumber","_templateObject3","BtnDelete","_templateObject4","Contact","_ref","contact","dispatch","useDispatch","_jsxs","id","children","_jsx","number","type","onClick","deleteContact","RiUserUnfollowFill","className","nanoid","ContactList","useSelector","arrContacts","useEffect","fetchContacts","showArr","Array","isArray","length","Loading","map","TfiFaceSad","Form","MarkField","BtnAdd","_templateObject5","ContactForm","_Fragment","onSubmit","event","preventDefault","newUser","target","elements","value","console","log","hasContact","some","alert","concat","reset","addContact","required","RiUserAddFill","Contacts","WrapContactsPage","Helmet","TitleContactsPage","WrapHomePage","TitleHomePage","WrapRegisterPage","TitleRegisterPage","WrapLoginPage","TitleLoginPage","_templateObject6","_templateObject7","_templateObject8"],"sourceRoot":""}