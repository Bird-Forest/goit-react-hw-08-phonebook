{"version":3,"file":"static/js/622.b5667435.chunk.js","mappings":"wNAEaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAM,EAE/CC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAU,EACpDC,EAAc,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAM,EAG5CC,GAAwBC,EAAAA,EAAAA,IACnC,CAACT,EAHyB,SAAAC,GAAK,OAAIA,EAAMS,OAAOC,MAAO,IAIvD,SAACR,EAAOQ,GACN,OAAe,OAAXA,EACKR,EAAMO,QAAO,SAAAE,GAAI,OAAIA,EAAKC,KAAKC,cAAcC,SAASJ,EAAO,IAE/DR,CACT,I,6BCbWa,EAAOC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8K,UCAhBC,EAAcH,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qKAUvBE,EAAcJ,EAAAA,GAAAA,EAAQK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,0OAatBI,EAAaN,EAAAA,GAAAA,IAAUO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,kJASvBM,EAAgBR,EAAAA,GAAAA,EAAQS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,oOAaxBQ,EAAYV,EAAAA,GAAAA,OAAaW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,iV,8BClCvB,SAASU,EAAOC,GAAe,IAAZC,EAAOD,EAAPC,QAC1BC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,MAACd,EAAW,CAACe,GAAIJ,EAAQI,GAAGC,SAAA,EAC1BC,EAAAA,EAAAA,KAAChB,EAAW,CAAAe,SAAEL,EAAQlB,QACtBqB,EAAAA,EAAAA,MAACX,EAAU,CAAAa,SAAA,EACTC,EAAAA,EAAAA,KAACZ,EAAa,CAAAW,SAAEL,EAAQO,UACxBD,EAAAA,EAAAA,KAACV,EAAS,CAACY,KAAK,SAASC,QANV,WAAH,OAASR,GAASS,EAAAA,EAAAA,IAAcV,EAAQI,IAAK,EAMVC,UAC7CC,EAAAA,EAAAA,KAACK,EAAAA,IAAkB,CAACC,UAAU,wBALFC,EAAAA,EAAAA,UAUtC,C,qCCzBaC,EAAY5B,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uHCKnC,EAJ4B,SAAHW,GAAqB,IAAfgB,EAAOhB,EAAPgB,QAC7B,OAAOT,EAAAA,EAAAA,KAACQ,EAAS,CAAAT,SAAEU,GACrB,ECUe,SAASC,IACtB,IAAMf,GAAWC,EAAAA,EAAAA,MACX5B,GAAY2C,EAAAA,EAAAA,IAAY5C,GACxBG,GAAQyC,EAAAA,EAAAA,IAAY1C,GACpB2C,GAAcD,EAAAA,EAAAA,IAAYxC,IAEhC0C,EAAAA,EAAAA,YAAU,WACRlB,GAASmB,EAAAA,EAAAA,MACX,GAAG,CAACnB,IAEJ,IAAMoB,EAAUC,MAAMC,QAAQL,IAAuC,IAAvBA,EAAYM,OAC1D,OACErB,EAAAA,EAAAA,MAAClB,EAAI,CAAAoB,SAAA,CACF/B,IAAagC,EAAAA,EAAAA,KAACmB,EAAAA,EAAO,IACrBjD,IAAS8B,EAAAA,EAAAA,KAACoB,EAAY,CAACX,QAASvC,EAAMuC,UACtCM,EACCH,EAAYS,KAAI,SAAA3B,GACd,OAAOM,EAAAA,EAAAA,KAACR,EAAO,CAACE,QAASA,IAAca,EAAAA,EAAAA,UACzC,KAEAP,EAAAA,EAAAA,KAACsB,EAAAA,IAAU,CAAChB,UAAU,eAI9B,CCrCO,IAAMiB,EAAO3C,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gPAalB0C,EAAY5C,EAAAA,GAAAA,MAAYK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,gHAOxBE,EAAcJ,EAAAA,GAAAA,MAAYO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,0XAqB1BI,EAAaN,EAAAA,GAAAA,IAAUS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,uHAOvBM,EAAgBR,EAAAA,GAAAA,MAAYW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,8YAsB5B2C,EAAS7C,EAAAA,GAAAA,OAAa8C,IAAAA,GAAA5C,EAAAA,EAAAA,GAAA,8UC3DpB,SAAS6C,IACtB,IAAMhC,GAAWC,EAAAA,EAAAA,MACX/B,GAAW8C,EAAAA,EAAAA,IAAYhD,GAoB7B,OACEqC,EAAAA,EAAAA,KAAA4B,EAAAA,SAAA,CAAA7B,UACEF,EAAAA,EAAAA,MAAC0B,EAAI,CAACM,SApBW,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAU,CACdxD,KAAMsD,EAAMG,OAAOC,SAAS1D,KAAK2D,MACjClC,OAAQ6B,EAAMG,OAAOC,SAASjC,OAAOkC,OAMvC,GAHmBtE,EAASuE,MAC1B,SAAA1C,GAAO,OAAIA,EAAQlB,OAASsD,EAAMG,OAAOC,SAAS1D,KAAK2D,KAAK,IAK5D,OAFAE,MAAM,GAADC,OAAIN,EAAQxD,KAAI,iCACrBsD,EAAMG,OAAOM,QAGf5C,GAAS6C,EAAAA,EAAAA,IAAWR,IACpBF,EAAMG,OAAOM,OACf,EAGiCxC,SAAA,EAC3BC,EAAAA,EAAAA,KAACwB,EAAS,CAAAzB,UACRC,EAAAA,EAAAA,KAAChB,EAAW,CAACkB,KAAK,OAAO1B,KAAK,OAAOiE,YAAY,UAAUC,UAAQ,OAErE7C,EAAAA,EAAAA,MAACX,EAAU,CAAAa,SAAA,EACTC,EAAAA,EAAAA,KAACwB,EAAS,CAAAzB,UACRC,EAAAA,EAAAA,KAACZ,EAAa,CACZc,KAAK,MACL1B,KAAK,SACLiE,YAAY,YACZC,UAAQ,OAGZ1C,EAAAA,EAAAA,KAACyB,EAAM,CAACvB,KAAK,SAAQH,UACnBC,EAAAA,EAAAA,KAAC2C,EAAAA,IAAa,CAACrC,UAAU,sBAMrC,C,cCnDe,SAASsC,IACtB,IAAM5E,GAAY2C,EAAAA,EAAAA,IAAY5C,GAE9B,OACE8B,EAAAA,EAAAA,MAACgD,EAAAA,GAAgB,CAAA9C,SAAA,EACfC,EAAAA,EAAAA,KAAC8C,EAAAA,GAAiB,CAAA/C,SACf/B,GAAa,4BAEhBgC,EAAAA,EAAAA,KAAC2B,EAAW,KACZ3B,EAAAA,EAAAA,KAACU,EAAW,MAGlB,C,iSCfaqC,EAAenE,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mWAGZkE,GAUbC,EAAmBrE,EAAAA,GAAAA,IAAUK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,4LAU7BoE,EAAoBtE,EAAAA,GAAAA,GAASO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,oHAO7BqE,EAAgBvE,EAAAA,GAAAA,IAAUS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,4LAU1BsE,EAAiBxE,EAAAA,GAAAA,GAASW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,oHAQ1B+D,EAAmBjE,EAAAA,GAAAA,IAAU8C,IAAAA,GAAA5C,EAAAA,EAAAA,GAAA,yMAW7BgE,EAAoBlE,EAAAA,GAAAA,IAAUyE,IAAAA,GAAAvE,EAAAA,EAAAA,GAAA,wP","sources":["redux/contacts/selectors.js","components/ContactList/ContactList.styled.js","components/Contact/Contact.styled.js","components/Contact/Contact.jsx","components/Error/Error.styled.js","components/Error/Error.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","pages/Contacts.jsx","pages/Page.styled.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.users;\n// console.log(selectContacts);\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter.select;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (users, select) => {\n    if (select !== null) {\n      return users.filter(user => user.name.toLowerCase().includes(select));\n    }\n    return users;\n  }\n);\n","import styled from 'styled-components';\n\nexport const Wrap = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  padding: 0;\n  margin: 0;\n  .icon-sad {\n    width: 60px;\n    height: 60px;\n    fill: #673ab7;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ContactWrap = styled.li`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: flex-end;\n  min-width: 360px;\n  gap: 8px;\n  padding: 0;\n  margin: 0;\n`;\nexport const ContactName = styled.p`\n  display: inline-block;\n  width: 280px;\n  height: 30px;\n  font-size: 16px;\n  font-weight: 700;\n  border-radius: 4px;\n  outline: none;\n  border: 1px solid #7e57c2;\n  color: #673ab7;\n  padding: 0 8px;\n  margin: 0;\n`;\nexport const WrapNumber = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 8px;\n  width: 240px;\n  padding: 0;\n  margin: 0;\n`;\nexport const ContactNumber = styled.p`\n  width: 180px;\n  height: 30px;\n  font-size: 16px;\n  font-weight: 700;\n  border-radius: 4px;\n  outline: none;\n  color: #673ab7;\n  border: 1px solid #7e57c2;\n  padding: 0 8px;\n  margin: 0;\n  cursor: pointer;\n`;\nexport const BtnDelete = styled.button`\n  display: inline-block;\n  background-color: #ede7f6;\n  width: 30px;\n  height: 30px;\n  color: white;\n  outline: none;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  margin: 0;\n  .icon-delete {\n    width: 30px;\n    height: 30px;\n    fill: #673ab7;\n    &:hover,\n    :focus {\n      fill: #7c4dff;\n    }\n  }\n`;\n","import React from 'react';\nimport { RiUserUnfollowFill } from 'react-icons/ri';\nimport {\n  BtnDelete,\n  ContactName,\n  ContactNumber,\n  ContactWrap,\n  WrapNumber,\n} from './Contact.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { nanoid } from '@reduxjs/toolkit';\n\nexport default function Contact({ contact }) {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(contact.id));\n  return (\n    <ContactWrap id={contact.id} key={nanoid()}>\n      <ContactName>{contact.name}</ContactName>\n      <WrapNumber>\n        <ContactNumber>{contact.number}</ContactNumber>\n        <BtnDelete type=\"button\" onClick={handleDelete}>\n          <RiUserUnfollowFill className=\"icon-delete\" />\n        </BtnDelete>\n      </WrapNumber>\n    </ContactWrap>\n  );\n}\n","import styled from 'styled-components';\n\nexport const WrapError = styled.div`\n  padding: 20px;\n  font-size: 24px;\n  border: 1px solid black;\n  background-color: red;\n  color: white;\n`;\n","import React from 'react';\nimport { WrapError } from './Error.styled';\n\nexport const ErrorMessage = ({ message }) => {\n  return <WrapError>{message}</WrapError>;\n};\n\nexport default ErrorMessage;\n","import React, { useEffect } from 'react';\nimport { Wrap } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Contact from 'components/Contact/Contact';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectError,\n  selectIsLoading,\n  selectVisibleContacts,\n} from 'redux/contacts/selectors';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { TfiFaceSad } from 'react-icons/tfi';\nimport Loading from 'components/Loader/Loading';\nimport ErrorMessage from 'components/Error/Error';\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const arrContacts = useSelector(selectVisibleContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const showArr = Array.isArray(arrContacts) && arrContacts.length !== 0;\n  return (\n    <Wrap>\n      {isLoading && <Loading />}\n      {error && <ErrorMessage message={error.message} />}\n      {showArr ? (\n        arrContacts.map(contact => {\n          return <Contact contact={contact} key={nanoid()} />;\n        })\n      ) : (\n        <TfiFaceSad className=\"icon-sad\" />\n      )}\n    </Wrap>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: flex-end;\n  gap: 4px;\n  min-width: 360px;\n  padding: 8px 0;\n  margin: 0 auto;\n  @media screen and (min-width: 800px) {\n    width: 800px;\n  }\n`;\nexport const MarkField = styled.label`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 0;\n  margin: 0;\n`;\nexport const ContactName = styled.input`\n  width: 280px;\n  height: 30px;\n  font-size: 16px;\n  font-weight: 700;\n  border-radius: 4px;\n  outline: none;\n  border: 1px solid #7e57c2;\n  color: #673ab7;\n  padding: 0 8px;\n  &::placeholder {\n    font-size: 12px;\n    font-weight: 500;\n    color: #7e57c2;\n  }\n  &:hover,\n  :focus {\n    background-color: #b39ddb;\n    border: 1px solid #b39ddb;\n  }\n`;\nexport const WrapNumber = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n  gap: 8px;\n  width: 240px;\n`;\nexport const ContactNumber = styled.input`\n  width: 180px;\n  height: 30px;\n  font-size: 16px;\n  font-weight: 700;\n  border-radius: 4px;\n  outline: none;\n  color: #673ab7;\n  border: 1px solid #7e57c2;\n  padding: 0 8px;\n  cursor: pointer;\n  &::placeholder {\n    font-size: 12px;\n    font-weight: 500;\n    color: #7e57c2;\n  }\n  &:hover,\n  :focus {\n    background-color: #b39ddb;\n    border: 1px solid #b39ddb;\n  }\n`;\nexport const BtnAdd = styled.button`\n  display: inline-block;\n  background-color: #ede7f6;\n  width: 30px;\n  height: 30px;\n  color: white;\n  outline: none;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  margin: 0;\n  .icon-add {\n    width: 30px;\n    height: 30px;\n    fill: #673ab7;\n    &:hover,\n    :focus {\n      fill: #7c4dff;\n    }\n  }\n`;\n","import {\n  Form,\n  ContactName,\n  ContactNumber,\n  BtnAdd,\n  MarkField,\n  WrapNumber,\n} from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { RiUserAddFill } from 'react-icons/ri';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newUser = {\n      name: event.target.elements.name.value,\n      number: event.target.elements.number.value,\n    };\n    // console.log(newUser);\n    const hasContact = contacts.some(\n      contact => contact.name === event.target.elements.name.value\n    );\n    if (hasContact) {\n      alert(`${newUser.name} is already in contacts`);\n      event.target.reset();\n      return;\n    }\n    dispatch(addContact(newUser));\n    event.target.reset();\n  };\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <MarkField>\n          <ContactName type=\"text\" name=\"name\" placeholder=\"Name...\" required />\n        </MarkField>\n        <WrapNumber>\n          <MarkField>\n            <ContactNumber\n              type=\"tel\"\n              name=\"number\"\n              placeholder=\"Number...\"\n              required\n            />\n          </MarkField>\n          <BtnAdd type=\"submit\">\n            <RiUserAddFill className=\"icon-add\" />\n          </BtnAdd>\n        </WrapNumber>\n      </Form>\n    </>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport ContactList from 'components/ContactList/ContactList';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport { TitleContactsPage, WrapContactsPage } from './Page.styled';\n\nexport default function Contacts() {\n  const isLoading = useSelector(selectIsLoading);\n\n  return (\n    <WrapContactsPage>\n      <TitleContactsPage>\n        {isLoading && 'Request in progress...'}\n      </TitleContactsPage>\n      <ContactForm />\n      <ContactList />\n    </WrapContactsPage>\n  );\n}\n","import styled from 'styled-components';\nimport myImage from '../img/hends.jpg';\n\nexport const WrapHomePage = styled.div`\n  display: flex;\n  /* background-image: url('https://celes.club/uploads/posts/2023-03/thumbs/1679452484_celes-club-p-fon-druzhba-vkontakte-97.jpg'); */\n  background-image: url(${myImage});\n  object-fit: cover;\n  background-repeat: no-repeat;\n  min-width: 360px;\n  height: 1200px;\n  @media screen and (min-width: 800px) {\n    width: 800px;\n  }\n`;\n\nexport const WrapRegisterPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  background-color: #e1f5fe;\n  margin: 0;\n`;\nexport const TitleRegisterPage = styled.h2`\n  display: block;\n  font-size: 24px;\n  padding: 0;\n  margin: 160px auto 20px auto;\n  color: #01579b;\n`;\nexport const WrapLoginPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  background-color: #ccff90;\n  margin: 0;\n`;\nexport const TitleLoginPage = styled.h2`\n  display: block;\n  font-size: 24px;\n  padding: 0;\n  margin: 160px auto 20px auto;\n  color: #388e3c;\n`;\n\nexport const WrapContactsPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  background-color: #ede7f6;\n  gap: 4px;\n  margin: 0;\n`;\nexport const TitleContactsPage = styled.div`\n  display: flex;\n  min-width: 360px;\n  height: 40px;\n  font-size: 16px;\n  padding: 0;\n  margin: 12px auto 40px auto;\n  color: #7c4dff;\n  @media screen and (min-width: 600px) {\n    width: 800px;\n    margin: 16px auto 0 auto;\n  }\n`;\n"],"names":["selectContacts","state","contacts","users","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filter","select","user","name","toLowerCase","includes","Wrap","styled","_templateObject","_taggedTemplateLiteral","ContactWrap","ContactName","_templateObject2","WrapNumber","_templateObject3","ContactNumber","_templateObject4","BtnDelete","_templateObject5","Contact","_ref","contact","dispatch","useDispatch","_jsxs","id","children","_jsx","number","type","onClick","deleteContact","RiUserUnfollowFill","className","nanoid","WrapError","message","ContactList","useSelector","arrContacts","useEffect","fetchContacts","showArr","Array","isArray","length","Loading","ErrorMessage","map","TfiFaceSad","Form","MarkField","BtnAdd","_templateObject6","ContactForm","_Fragment","onSubmit","event","preventDefault","newUser","target","elements","value","some","alert","concat","reset","addContact","placeholder","required","RiUserAddFill","Contacts","WrapContactsPage","TitleContactsPage","WrapHomePage","myImage","WrapRegisterPage","TitleRegisterPage","WrapLoginPage","TitleLoginPage","_templateObject7"],"sourceRoot":""}